openapi: 3.0.0
info:
  title: Outline API
  description: "# Introduction\n\nThe Outline API is structured in an RPC style. It\
    \ enables you to\nprogramatically interact with all aspects of Outline’s data\
    \ – in fact, the\nmain application is built on exactly the same API.\n\nThe API\
    \ structure is available as an \n[openapi specification](https://github.com/outline/openapi)\
    \ if that’s your \njam – it can be used to generate clients for most programming\
    \ languages.\n\n# Making requests\n\nOutline’s API follows simple RPC style conventions\
    \ where each API endpoint is\na method on `https://app.getoutline.com/api/method`.\
    \ Both `GET` and `POST` \nmethods are supported but it’s recommended that you\
    \ make all call using POST.\nOnly HTTPS is supported and all response payloads\
    \ are JSON.\n\nWhen making `POST` requests, request parameters are parsed depending\
    \ on\nContent-Type header. To make a call using JSON payload, you must pass\n\
    Content-Type: application/json header, here’s an example using CURL:\n\n```\n\
    curl https://app.getoutline.com/api/documents.info\n-X POST\n-H 'authorization:\
    \ Bearer MY_API_KEY'\n-H 'content-type: application/json'\n-H 'accept: application/json'\n\
    -d '{\"id\": \"outline-api-NTpezNwhUP\"}'\n```\n\nOr, with JavaScript:\n\n```javascript\n\
    const response = await fetch(\"https://app.getoutline.com/api/documents.info\"\
    , {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n  \
    \  \"Content-Type\": \"application/json\",\n    Authorization: 'Bearer MY_API_KEY'\n\
    \  }\n})\n\nconst body = await response.json();\nconst document = body.data;\n\
    ```\n\n# Authentication\n\nTo access API endpoints, you must provide a valid API\
    \ key. You can create new\nAPI keys in your [account settings](https://app.getoutline.com/settings).\
    \ Be\ncareful when handling your keys as they give access to all of your documents,\n\
    you should treat them like passwords and they should never be committed to\nsource\
    \ control.\n\nTo authenticate with API, you can supply the API key as a header\n\
    (`Authorization: Bearer YOUR_API_KEY`) or as part of the payload using `token`\
    \ \nparameter. Header based authentication is highly recommended so that your\
    \ keys\ndon’t accidentally leak into logs.\n\nSome API endpoints allow unauthenticated\
    \ requests for public resources and\nthey can be called without an API key.\n\n\
    # Errors\n\nAll successful API requests will be returned with a 200 or 201 status\
    \ code\nand `ok: true` in the response payload. If there’s an error while making\
    \ the\nrequest, the appropriate status code is returned with the error message:\n\
    \n```\n{\n  \"ok\": false,\n  \"error: \"Not Found\"\n}\n```\n\n# Pagination\n\
    \nMost top-level API resources have support for \"list\" API methods. For instance,\n\
    you can list users, documents, and collections. These list methods share\ncommon\
    \ parameters, taking both `limit` and `offset`.\n\nResponses will echo these parameters\
    \ in the root `pagination` key, and also\ninclude a `nextPath` key which can be\
    \ used as a handy shortcut to fetch the\nnext page of results. For example:\n\n\
    ```\n{\n  ok: true,\n  status: 200,\n  data: […],\n  pagination: {\n    limit:\
    \ 25,\n    offset: 0,\n    nextPath: \"/api/documents.list?limit=25&offset=25\"\
    \n  }\n}\n```\n\n# Policies\n\nMany API resources have associated \"policies\"\
    , these objects describe the\ncurrent API keys authorized actions related to an\
    \ individual resource. It\nshould be noted that the policy \"id\" is identical\
    \ to the resource it is\nrelated to, policies themselves do not have unique identifiers.\n\
    \nFor most usecases of the API, policies can be safely ignored. Calling\nunauthorized\
    \ methods will result in the appropriate response code – these are\nused in the\
    \ main Outline UI to adjust which elements are visible.\n"
  contact:
    email: hello@getoutline.com
  version: 0.1.0
servers:
- url: https://app.getoutline.com/api
  description: Production
security:
- http: []
tags:
- name: Attachments
  description: "`Attachments` represent a file uploaded to cloud storage. They are\
    \ created \nbefore the upload happens from the client and store all the meta information\n\
    such as file type, size, and location.\n"
- name: Auth
  description: "`Auth` represents the current API Keys authentication details. It\
    \ can be \nused to check that a token is still valid and load the IDs for the\
    \ current\nuser and team.\n"
- name: Collections
  description: "`Collections` represent grouping of documents in the knowledge base,\
    \ they \noffer a way to structure information in a nested hierarchy and a level\n\
    at which read and write permissions can be granted to individual users or\ngroups\
    \ of users.\n"
- name: Documents
  description: |
    `Documents` are what everything else revolves around. A document represents
    a single page of information and always returns the latest version of the
    content. Documents are stored in [Markdown](https://spec.commonmark.org/)
    formatting.
- name: Events
  description: |
    `Events` represent an artifact of an action. Whether it is creating a user,
    editing a document, changing permissions, or any other action – an event
    is created that can be used as an audit trail or activity stream.
- name: FileOperations
  description: |
    `FileOperations` represent background jobs for importing or exporting files.
    You can query the file operation to find the state of progress and any
    resulting output.
- name: Groups
  description: "`Groups` represent a list of users that logically belong together,\
    \ for \nexample there might be groups for each department in your organization.\n\
    Groups can be granted access to collections with read or write permissions.\n"
- name: Revisions
  description: "`Revisions` represent a snapshop of a document at a point in time.\
    \ They \nare used to keep tracking of editing and collaboration history – a document\n\
    can also be restored to a previous revision if neccessary.\n"
- name: Shares
  description: |
    `Shares` represent authorization to view a document without being a member
    of the team. Shares are created in order to give access to documents publicly.
    Each user that shares a document will have a unique share object.
- name: Users
  description: |
    `Users` represent an individual with access to the knowledge base. Users
    can be created automatically when signing in with SSO or when a user is
    invited via email.
- name: Views
  description: "`Views` represent a compressed record of an individual users views\
    \ of a\ndocument. Individual views are not recorded but a first, last and total\
    \ \nis kept per user.\n"
paths:
  /attachments.create:
    post:
      tags:
      - Attachments
      summary: Create an attachment
      description: Creating an attachment object creates a database record and returns
        the inputs needed to generate a signed url and upload the file from the client
        to cloud storage.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attachments_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /attachments.redirect:
    post:
      tags:
      - Attachments
      summary: Retrieve an attachment
      description: "Load an attachment from where it is stored based on the id. If\
        \ the attachment is private then a temporary, signed url with embedded credentials\
        \ is generated on demand."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attachments_redirect_body'
      responses:
        "302":
          description: The url for the attachment
  /attachments.delete:
    post:
      tags:
      - Attachments
      summary: Delete an attachment
      description: Deleting an attachment is permanant. It will not delete references
        or links to the attachment that may exist in your documents.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attachments_delete_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth.info:
    post:
      tags:
      - Auth
      summary: Retrieve auth
      description: Retrieve authentication details for the current API key
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth.config:
    post:
      tags:
      - Auth
      summary: Retrieve auth config
      description: Retrieve authentication options
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
  /collections.info:
    post:
      tags:
      - Collections
      summary: Retrieve a collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.list:
    post:
      tags:
      - Collections
      summary: List all collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pagination'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.create:
    post:
      tags:
      - Collections
      summary: Create a collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.update:
    post:
      tags:
      - Collections
      summary: Update a collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_update_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.add_user:
    post:
      tags:
      - Collections
      summary: Add a collection user
      description: This method allows you to add a user membership to the specified
        collection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_add_user_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.remove_user:
    post:
      tags:
      - Collections
      summary: Remove a collection user
      description: This method allows you to remove a user from the specified collection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_remove_user_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.memberships:
    post:
      tags:
      - Collections
      summary: List all collection memberships
      description: This method allows you to list a collections individual memberships.
        It's important to note that memberships returned from this endpoint do not
        include group memberships.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_memberships_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.add_group:
    post:
      tags:
      - Collections
      summary: Add a group to a collection
      description: This method allows you to give all members in a group access to
        a collection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_add_group_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.remove_group:
    post:
      tags:
      - Collections
      summary: Remove a collection group
      description: This method allows you to revoke all members in a group access
        to a collection. Note that members of the group may still retain access through
        other groups or individual memberships.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_remove_group_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.group_memberships:
    post:
      tags:
      - Collections
      summary: List all collection group members
      description: This method allows you to list a collections group memberships.
        This is the list of groups that have been given access to the collection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_group_memberships_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.delete:
    post:
      tags:
      - Collections
      summary: Delete a collection
      description: Delete a collection and all of its documents. This action can’t
        be undone so please be careful.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_delete_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.export:
    post:
      tags:
      - Collections
      summary: Export a collection
      description: Triggers a bulk export of the collection in markdown format and
        their attachments. If documents are nested then they will be nested in folders
        inside the zip file. The endpoint returns a `FileOperation` that can be queried
        to track the progress of the export and get the url for the final file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collections_export_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /collections.export_all:
    post:
      tags:
      - Collections
      summary: Export all collections
      description: Triggers a bulk export of all documents in markdown format and
        their attachments. If documents are nested then they will be nested in folders
        inside the zip file. The endpoint returns a `FileOperation` that can be queried
        to track the progress of the export and get the url for the final file.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.info:
    post:
      tags:
      - Documents
      summary: Retrieve a document
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.import:
    post:
      tags:
      - Documents
      summary: Import a file as a document
      description: "This method allows you to create a new document by importing an\
        \ existing file. By default a document is set to the collection root. If you\
        \ want to create a nested/child document, you should pass parentDocumentId\
        \ to set the parent document."
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/documents_import_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.export:
    post:
      tags:
      - Documents
      summary: Export a document as markdown
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_export_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.list:
    post:
      tags:
      - Documents
      summary: List all documents
      description: This method will list all published documents and draft documents
        belonging to the current user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.drafts:
    post:
      tags:
      - Documents
      summary: List all draft documents
      description: This method will list all draft documents belonging to the current
        user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_drafts_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.viewed:
    post:
      tags:
      - Documents
      summary: List all recently viewed documents
      description: This method will list all documents recently viewed by the current
        user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_viewed_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.search:
    post:
      tags:
      - Documents
      summary: Search all documents
      description: This methods allows you to search your teams documents with keywords.
        Note that search results will be restricted to those accessible by the current
        access token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_search_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.create:
    post:
      tags:
      - Documents
      summary: Create a document
      description: "This method allows you to create or publish a new document. By\
        \ default a document is set to the collection root. If you want to create\
        \ a nested/child document, you should pass parentDocumentId to set the parent\
        \ document."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.update:
    post:
      tags:
      - Documents
      summary: Update a document
      description: This method allows you to modify an already created document
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_update_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.templatize:
    post:
      tags:
      - Documents
      summary: Create a template from a document
      description: This method allows you to createa new template using an existing
        document as the basis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_templatize_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.star:
    post:
      tags:
      - Documents
      summary: Star a document
      description: Starring a document gives it extra priority in the UI and makes
        it easier to find important information later.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_star_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.unstar:
    post:
      tags:
      - Documents
      summary: Unstar a document
      description: Starring a document gives it extra priority in the UI and makes
        it easier to find important information later.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_unstar_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.unpublish:
    post:
      tags:
      - Documents
      summary: Unpublish a document
      description: Unpublishing a document moves it back to a draft status and out
        of the collection.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_unpublish_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.move:
    post:
      tags:
      - Documents
      summary: Move a document
      description: "Move a document to a new location or collection. If no parent\
        \ document is provided, the document will be moved to the collection root."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_move_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.archive:
    post:
      tags:
      - Documents
      summary: Archive a document
      description: Archiving a document allows outdated information to be moved out
        of sight whilst retaining the ability to optionally search and restore it
        later.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_archive_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.restore:
    post:
      tags:
      - Documents
      summary: Restore a document
      description: "If a document has been archived or deleted, it can be restored.\
        \ Optionally a revision can be passed to restore the document to a previous\
        \ point in time."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_restore_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents.delete:
    post:
      tags:
      - Documents
      summary: Delete a document
      description: Deleting a document moves it to the trash. If not restored within
        30 days it is permenantly deleted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documents_delete_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events.list:
    post:
      tags:
      - Events
      summary: List all events
      description: Events are an audit trail of important events that happen in the
        knowledge base.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /fileOperations.info:
    post:
      tags:
      - FileOperations
      summary: Retrieve a file operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fileOperations_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /fileOperations.redirect:
    post:
      tags:
      - FileOperations
      summary: Retrieve the file
      description: "Load the resulting file from where it is stored based on the id.\
        \ A temporary, signed url with embedded credentials is generated on demand."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fileOperations_redirect_body'
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /fileOperations.list:
    post:
      tags:
      - FileOperations
      summary: List all file operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fileOperations_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.info:
    post:
      tags:
      - Groups
      summary: Retrieve a group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.list:
    post:
      tags:
      - Groups
      summary: List all groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.create:
    post:
      tags:
      - Groups
      summary: Create a group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.update:
    post:
      tags:
      - Groups
      summary: Update a group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_update_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.delete:
    post:
      tags:
      - Groups
      summary: Delete a group
      description: Deleting a group will cause all of its members to lose access to
        any collections the group has previously been added to. This action can’t
        be undone so please be careful.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_delete_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.memberships:
    post:
      tags:
      - Groups
      summary: List all group members
      description: List and filter all the members in a group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_memberships_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.add_user:
    post:
      tags:
      - Groups
      summary: Add a group member
      description: This method allows you to add a user to the specified group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_add_user_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups.remove_user:
    post:
      tags:
      - Groups
      summary: Remove a group member
      description: This method allows you to remove a user from the group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_remove_user_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /revisions.info:
    post:
      tags:
      - Revisions
      summary: Retrieve a revision
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revisions_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /revisions.list:
    post:
      tags:
      - Revisions
      summary: List all revisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revisions_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shares.info:
    post:
      tags:
      - Shares
      summary: Retrieve a share object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shares_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shares.list:
    post:
      tags:
      - Shares
      summary: List all shares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shares_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shares.create:
    post:
      tags:
      - Shares
      summary: Create a share
      description: "Creates a new share link that can be used by to access a document.\
        \ If you request multiple shares for the same document with the same API key,\
        \ the same share object will be returned. By default all shares are unpublished."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shares_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shares.update:
    post:
      tags:
      - Shares
      summary: Update a share
      description: "Allows changing an existing shares published status, which removes\
        \ authentication and makes it available to anyone with the link."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shares_update_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shares.revoke:
    post:
      tags:
      - Shares
      summary: Revoke a share
      description: Makes the share link inactive so that it can no longer be used
        to access the document.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shares_revoke_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: The request failed one or more validations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.invite:
    post:
      tags:
      - Users
      summary: Invite users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_invite_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.info:
    post:
      tags:
      - Users
      summary: Retrieve a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_info_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.list:
    post:
      tags:
      - Users
      summary: List all users
      description: List and filter all the users in the team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.update:
    post:
      tags:
      - Users
      summary: Update a user
      description: Update a users name or avatar. No `id` is required as it is only
        possible to update the current user at this time.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_update_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.promote:
    post:
      tags:
      - Users
      summary: Promote a user
      description: Promote a user to be a team admin. This endpoint is only available
        for admin users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_promote_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.demote:
    post:
      tags:
      - Users
      summary: Demote a user
      description: Demote a team admin to regular user permissions. This endpoint
        is only available for admin users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_demote_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.suspend:
    post:
      tags:
      - Users
      summary: Suspend a user
      description: Suspending a user prevents the user from signing in. Users that
        are suspended are also not counted against billing totals in the hosted version.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_suspend_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.activate:
    post:
      tags:
      - Users
      summary: Activate a user
      description: Activating a previously suspended user allows them to signin again.
        Users that are activated will cause billing totals to be re-calculated in
        the hosted version.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_activate_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users.delete:
    post:
      tags:
      - Users
      summary: Delete a user
      description: "Deleting a user removes the object entirely. In almost every circumstance\
        \ it is preferable to suspend a user, as a deleted user can be recreated by\
        \ signing in with SSO again."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_delete_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /views.list:
    post:
      tags:
      - Views
      summary: List all views
      description: List all users that have viewed a document and the overall view
        count.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/views_list_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /views.create:
    post:
      tags:
      - Views
      summary: Create a view
      description: Creates a new view for a document. This is documented in the interests
        of thoroughness however it is recommended that views are not created from
        outside of the Outline UI.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/views_create_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
        "401":
          description: The API key is missing or otherwise invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: The current API key is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Attachment:
      type: object
      properties:
        contentType:
          type: string
          example: image/png
        size:
          type: number
        name:
          type: string
        url:
          type: string
          format: uri
        documentId:
          type: string
          description: "Identifier for the associated document, if any."
          format: uuid
      example:
        size: 6.027456183070403
        name: name
        documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        contentType: image/png
        url: http://example.com/aeiou
    Pagination:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
          example: 25
      example:
        offset: 0.8008281904610115
        limit: 25
    Sorting:
      type: object
      properties:
        sort:
          type: string
          example: updatedAt
        direction:
          type: string
          example: DESC
          enum:
          - ASC
          - DESC
    NavigationNode:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document.
          format: uuid
        title:
          type: string
        url:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/NavigationNode'
    Auth:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        team:
          $ref: '#/components/schemas/Team'
      example:
        team:
          allowedDomains:
          - allowedDomains
          - allowedDomains
          avatarUrl: http://example.com/aeiou
          documentEmbeds: true
          sharing: true
          defaultCollectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          inviteRequired: true
          url: http://example.com/aeiou
          guestSignin: true
          memberCollectionCreate: true
          defaultUserRole: viewer
          collaborativeEditing: true
          name: name
          subdomain: subdomain
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    Collection:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the collection.
          example: Human Resources
        description:
          type: string
          description: "A description of the collection, may contain markdown formatting"
          example: ""
        sort:
          $ref: '#/components/schemas/Collection_sort'
        index:
          type: string
          description: The position of the collection in the sidebar
          example: P
        documents:
          type: array
          example: []
          items:
            $ref: '#/components/schemas/NavigationNode'
        color:
          type: string
          description: "A color representing the collection, this is used to help\
            \ make collections more identifiable in the UI. It should be in HEX format\
            \ including the #"
          example: '#123123'
        icon:
          type: string
          description: A string that represents an icon in the outline-icons package
        permission:
          type: string
          enum:
          - read
          - read_write
        createdAt:
          type: string
          description: The date and time that this object was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: The date and time that this object was last changed
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          description: The date and time that this object was deleted
          format: date-time
          nullable: true
          readOnly: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        color: '#123123'
        documents: []
        name: Human Resources
        icon: icon
        description: ""
        index: P
        permission: read
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sort:
          field: field
          direction: asc
        updatedAt: 2000-01-23T04:56:07.000+00:00
    Document:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        collectionId:
          type: string
          description: Identifier for the associated collection.
          format: uuid
        parentDocumentId:
          type: string
          description: "Identifier for the document this is a child of, if any."
          format: uuid
        title:
          type: string
          description: The title of the document.
          example: 🎉 Welcome to Acme Inc
        fullWidth:
          type: boolean
          description: Whether this document should be displayed in a full-width view.
        emoji:
          type: string
          description: An emoji associated with the document.
          readOnly: true
          example: 🎉
        text:
          type: string
          description: "The text content of the document, contains markdown formatting"
          example: …
        urlId:
          type: string
          description: A short unique ID that can be used to identify the document
            as an alternative to the UUID
          example: hDYep1TPAM
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/User'
        pinned:
          type: boolean
          description: Whether this document is pinned in the collection
        template:
          type: boolean
          description: Whether this document is a template
        templateId:
          type: string
          description: "Unique identifier for the template this document was created\
            \ from, if any"
          format: uuid
        revision:
          type: number
          description: A number that is auto incrementing with every revision of the
            document that is saved
          readOnly: true
        createdAt:
          type: string
          description: The date and time that this object was created
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/User'
        updatedAt:
          type: string
          description: The date and time that this object was last changed
          format: date-time
          readOnly: true
        updatedBy:
          $ref: '#/components/schemas/User'
        publishedAt:
          type: string
          description: The date and time that this object was published
          format: date-time
          nullable: true
          readOnly: true
        archivedAt:
          type: string
          description: The date and time that this object was archived
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          description: The date and time that this object was deleted
          format: date-time
          nullable: true
          readOnly: true
      example:
        template: true
        fullWidth: true
        pinned: true
        updatedBy: null
        emoji: 🎉
        publishedAt: 2000-01-23T04:56:07.000+00:00
        title: 🎉 Welcome to Acme Inc
        urlId: hDYep1TPAM
        templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        revision: 0.8008281904610115
        createdAt: 2000-01-23T04:56:07.000+00:00
        archivedAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        createdBy: null
        collaborators:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        text: …
        collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updatedAt: 2000-01-23T04:56:07.000+00:00
    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
          example: documents.create
        modelId:
          type: string
          description: "Identifier for the object this event is associated with when\
            \ it is not one of document, collection, or user."
          format: uuid
          readOnly: true
        actorId:
          type: string
          description: The user that performed the action.
          format: uuid
          readOnly: true
        actorIpAddress:
          type: string
          description: The ip address the action was performed from. This field is
            only returned when the `auditLog` boolean is true.
          readOnly: true
          example: 60.169.88.100
        collectionId:
          type: string
          description: "Identifier for the associated collection, if any"
          format: uuid
          readOnly: true
        documentId:
          type: string
          description: "Identifier for the associated document, if any"
          format: uuid
          readOnly: true
        createdAt:
          type: string
          description: The date and time that this event was created
          format: date-time
          readOnly: true
        data:
          type: object
          description: Additional unstructured data associated with the event
          readOnly: true
          example:
            name: Equipment list
        actor:
          $ref: '#/components/schemas/User'
      example:
        actor:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        actorIpAddress: 60.169.88.100
        createdAt: 2000-01-23T04:56:07.000+00:00
        actorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        data:
          name: Equipment list
        modelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: documents.create
        documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Error:
      type: object
      properties:
        ok:
          type: boolean
          example: false
        error:
          type: string
    FileOperation:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        type:
          type: string
          description: The type of file operation.
          readOnly: true
          example: export
          enum:
          - import
          - export
        state:
          type: string
          description: The state of the file operation.
          readOnly: true
          example: complete
          enum:
          - creating
          - uploading
          - complete
          - error
          - expired
        collection:
          allOf:
          - nullable: true
          - $ref: '#/components/schemas/Collection'
        user:
          $ref: '#/components/schemas/User'
        size:
          type: number
          description: The size of the resulting file in bytes
          readOnly: true
          example: 2048
        createdAt:
          type: string
          description: The date and time that this object was created
          format: date-time
          readOnly: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        size: 2048
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: complete
        collection: ""
        type: export
        user:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    Group:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of this group.
          example: Engineering
        memberCount:
          type: number
          description: The number of users that are members of the group
          readOnly: true
          example: 11
        createdAt:
          type: string
          description: The date and time that this object was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: The date and time that this object was last changed
          format: date-time
          readOnly: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        memberCount: 11
        name: Engineering
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updatedAt: 2000-01-23T04:56:07.000+00:00
    Share:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        documentTitle:
          type: string
          description: Title of the shared document.
          readOnly: true
          example: React best practices
        documentUrl:
          type: string
          description: URL of the original document.
          format: uri
          readOnly: true
        url:
          type: string
          description: URL of the publicly shared document.
          format: uri
          readOnly: true
        published:
          type: boolean
          description: If true the share can be loaded without a user account.
          example: false
        includeChildDocuments:
          type: boolean
          description: If to also give permission to view documents nested beneath
            this one.
          example: true
        createdAt:
          type: string
          description: Date and time when this share was created
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/User'
        updatedAt:
          type: string
          description: Date and time when this share was edited
          format: date-time
          readOnly: true
        lastAccessedAt:
          type: string
          description: Date and time when this share was last viewed
          format: date-time
          readOnly: true
      example:
        lastAccessedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        includeChildDocuments: true
        documentUrl: http://example.com/aeiou
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        published: false
        documentTitle: React best practices
        url: http://example.com/aeiou
        updatedAt: 2000-01-23T04:56:07.000+00:00
    Revision:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        documentId:
          type: string
          description: Identifier for the associated document.
          format: uuid
          readOnly: true
        title:
          type: string
          description: Title of the document.
          readOnly: true
        text:
          type: string
          description: "Body of the document, may contain markdown formatting"
          readOnly: true
        createdAt:
          type: string
          description: Date and time when this revision was created
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/User'
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        text: text
        title: title
    Team:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        name:
          type: string
          description: "The name of this team, it is usually auto-generated when the\
            \ first SSO connection is made but can be changed if neccessary."
        avatarUrl:
          type: string
          description: "The URL for the image associated with this team, it will be\
            \ displayed in the team switcher and in the top left of the knowledge\
            \ base along with the name."
          format: uri
        sharing:
          type: boolean
          description: Whether this team has share links globally enabled. If this
            value is false then all sharing UI and APIs are disabled.
        defaultCollectionId:
          type: string
          description: If set then the referenced collection is where users will be
            redirected to after signing in instead of the Home screen
          format: uuid
        defaultUserRole:
          type: string
          description: If set then this role will be used as the default for users
            that signup via SSO
          enum:
          - viewer
          - member
          - admin
        memberCollectionCreate:
          type: boolean
          description: Whether members are allowed to create new collections. If false
            then only admins can create collections.
        documentEmbeds:
          type: boolean
          description: Whether this team has embeds in documents globally enabled.
            It can be disabled to reduce potential data leakage to third parties.
        collaborativeEditing:
          type: boolean
          description: Whether this team has collaborative editing in documents globally
            enabled.
        inviteRequired:
          type: boolean
          description: "Whether an invite is required to join this team, if false\
            \ users may join with a linked SSO provider."
        allowedDomains:
          type: array
          items:
            type: string
            description: A hostname that user emails are restricted to
        guestSignin:
          type: boolean
          description: Whether this team has guest signin enabled. Guests can signin
            with an email address and are not required to have a Google Workspace/Slack
            SSO account once invited.
        subdomain:
          type: string
          description: Represents the subdomain at which this team's knowledge base
            can be accessed.
        url:
          type: string
          description: The fully qualified URL at which this team's knowledge base
            can be accessed.
          format: uri
          readOnly: true
      example:
        allowedDomains:
        - allowedDomains
        - allowedDomains
        avatarUrl: http://example.com/aeiou
        documentEmbeds: true
        sharing: true
        defaultCollectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        inviteRequired: true
        url: http://example.com/aeiou
        guestSignin: true
        memberCollectionCreate: true
        defaultUserRole: viewer
        collaborativeEditing: true
        name: name
        subdomain: subdomain
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
          readOnly: true
        name:
          type: string
          description: "The name of this user, it is migrated from Slack or Google\
            \ Workspace when the SSO connection is made but can be changed if neccessary."
          example: Jane Doe
        avatarUrl:
          type: string
          description: "The URL for the image associated with this user, it will be\
            \ displayed in the application UI and email notifications."
          format: uri
        email:
          type: string
          description: "The email associated with this user, it is migrated from Slack\
            \ or Google Workspace when the SSO connection is made but can be changed\
            \ if neccessary."
          format: email
          readOnly: true
        isAdmin:
          type: boolean
          description: Whether this user has admin permissions.
          readOnly: true
        isSuspended:
          type: boolean
          description: Whether this user has been suspended.
          readOnly: true
        lastActiveAt:
          type: string
          description: "The last time this user made an API request, this value is\
            \ updated at most every 5 minutes."
          format: date
          readOnly: true
        createdAt:
          type: string
          description: The date and time that this user first signed in or was invited
            as a guest.
          format: date-time
          readOnly: true
      example:
        lastActiveAt: 2000-01-23
        createdAt: 2000-01-23T04:56:07.000+00:00
        isSuspended: true
        avatarUrl: http://example.com/aeiou
        name: Jane Doe
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isAdmin: true
        email: ""
    Invite:
      type: object
      properties:
        name:
          type: string
          description: The full name of the user being invited
        email:
          type: string
          description: The email address to invite
        role:
          type: string
          enum:
          - member
          - guest
          - admin
      example:
        role: member
        name: name
        email: email
    Membership:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          readOnly: true
        userId:
          type: string
          description: Identifier for the associated user.
          format: uuid
          readOnly: true
        collectionId:
          type: string
          description: Identifier for the associated collection.
          format: uuid
          readOnly: true
        permission:
          type: string
          description: The permissions that this membership grants the user
          example: read_write
          enum:
          - read
          - read_write
          - maintainer
      example:
        permission: read_write
        id: id
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Policy:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object this policy references.
          format: uuid
          readOnly: true
        abilities:
          $ref: '#/components/schemas/Policy_abilities'
      example:
        abilities:
          unstar: true
          move: true
          read: true
          restore: true
          star: true
          update: true
          archive: true
          delete: true
          download: true
          pin: true
          unpin: true
          create: true
          unarchive: true
          createChildDocument: true
          share: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    GroupMembership:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          readOnly: true
        groupId:
          type: string
          description: Identifier for the associated group.
          format: uuid
          readOnly: true
        userId:
          type: string
          description: Identifier for the associated user.
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
      example:
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: id
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: null
    CollectionGroupMembership:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          readOnly: true
        groupId:
          type: string
          description: Identifier for the associated group.
          format: uuid
          readOnly: true
        collectionId:
          type: string
          description: Identifier for the associated collection.
          format: uuid
          readOnly: true
        permission:
          type: string
          description: The permissions that this membership grants the users in the
            group
          example: read_write
          enum:
          - read
          - read_write
          - maintainer
      example:
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permission: read_write
        id: id
        collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    View:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          readOnly: true
        documentId:
          type: string
          description: Identifier for the associated document.
          format: uuid
          readOnly: true
        firstViewedAt:
          type: string
          description: When the document was first viewed by the user
          format: date-time
          readOnly: true
        lastViewedAt:
          type: string
          description: When the document was last viewed by the user
          format: date-time
          readOnly: true
        count:
          type: number
          description: The number of times the user has viewed the document.
          readOnly: true
          example: 22
        user:
          $ref: '#/components/schemas/User'
      example:
        firstViewedAt: 2000-01-23T04:56:07.000+00:00
        count: 22
        documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: id
        user:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        lastViewedAt: 2000-01-23T04:56:07.000+00:00
    attachments_create_body:
      required:
      - contentType
      - name
      - size
      type: object
      properties:
        name:
          type: string
          example: image.png
        documentId:
          type: string
          description: "Identifier for the associated document, if any."
          format: uuid
        contentType:
          type: string
          example: image/png
        size:
          type: number
          description: Size of the file attachment in bytes.
    inline_response_200:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_data'
      example:
        data:
          uploadUrl: http://example.com/aeiou
          form: {}
          attachment:
            size: 6.027456183070403
            name: name
            documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            contentType: image/png
            url: http://example.com/aeiou
          maxUploadSize: 0.8008281904610115
    attachments_redirect_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the attachment.
          format: uuid
    attachments_delete_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the attachment.
          format: uuid
    inline_response_200_1:
      type: object
      properties:
        success:
          type: boolean
          example: true
      example:
        success: true
    inline_response_200_2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Auth'
      example:
        data:
          team:
            allowedDomains:
            - allowedDomains
            - allowedDomains
            avatarUrl: http://example.com/aeiou
            documentEmbeds: true
            sharing: true
            defaultCollectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            inviteRequired: true
            url: http://example.com/aeiou
            guestSignin: true
            memberCollectionCreate: true
            defaultUserRole: viewer
            collaborativeEditing: true
            name: name
            subdomain: subdomain
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    inline_response_200_3:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_3_data'
      example:
        data:
          hostname: acme-inc.getoutline.com
          name: Acme Inc
          services:
          - authUrl: https://acme-inc.getoutline.com/auth/slack
            name: Slack
            id: slack
          - authUrl: https://acme-inc.getoutline.com/auth/slack
            name: Slack
            id: slack
    collections_info_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the collection.
          format: uuid
    inline_response_200_4:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Collection'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
    inline_response_200_5:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
    collections_create_body:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: Human Resources
        description:
          type: string
          example: ""
        color:
          type: string
          example: '#123123'
        private:
          type: boolean
          example: false
    inline_response_200_6:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Collection'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    collections_update_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Human Resources
        description:
          type: string
          example: ""
        color:
          type: string
          example: '#123123'
    collections_add_user_body:
      required:
      - id
      - userId
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
    inline_response_200_7:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_7_data'
      example:
        data:
          users:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          memberships:
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    collections_remove_user_body:
      required:
      - id
      - userId
      type: object
      properties:
        id:
          type: string
          description: Identifier for the collection
          format: uuid
        userId:
          type: string
          format: uuid
    collections_memberships_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - required:
        - id
        type: object
        properties:
          id:
            type: string
            description: Identifier for the collection
            format: uuid
          query:
            type: string
            description: Filter memberships by user names
            example: jenny
          permission:
            type: string
            description: Filter memberships by permissions
            enum:
            - read
            - read_write
            - maintainer
    inline_response_200_8:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_7_data'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
          users:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          memberships:
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    collections_add_group_body:
      required:
      - groupId
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
    inline_response_200_9:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_9_data'
      example:
        data:
          collectionGroupMemberships:
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permission: read_write
            id: id
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permission: read_write
            id: id
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    collections_remove_group_body:
      required:
      - groupId
      - id
      type: object
      properties:
        id:
          type: string
          description: Identifier for the collection
          format: uuid
        groupId:
          type: string
          format: uuid
    collections_group_memberships_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - required:
        - id
        type: object
        properties:
          id:
            type: string
            description: Identifier for the collection
            format: uuid
          query:
            type: string
            description: Filter memberships by group names
            example: developers
          permission:
            type: string
            description: Filter memberships by permissions
            enum:
            - read
            - read_write
            - maintainer
    inline_response_200_10:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_10_data'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
          collectionGroupMemberships:
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permission: read_write
            id: id
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            permission: read_write
            id: id
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          groups:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
    collections_delete_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    collections_export_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    inline_response_200_11:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_11_data'
      example:
        data:
          fileOperation:
            createdAt: 2000-01-23T04:56:07.000+00:00
            size: 2048
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: complete
            collection: ""
            type: export
            user:
              lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
    documents_info_body:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
        shareId:
          type: string
          description: "Unique identifier for a document share, a shareId may be used\
            \ in place of a document UUID"
          format: uuid
    inline_response_200_12:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Document'
      example:
        data:
          template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
    documents_import_body:
      type: object
      properties:
        file:
          type: object
          description: "Only plain text, markdown, docx, and html format are supported."
        collectionId:
          type: string
          format: uuid
        parentDocumentId:
          type: string
          format: uuid
        template:
          type: boolean
        publish:
          type: boolean
    documents_export_body:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
        shareId:
          type: string
          description: "Unique identifier for a document share, a shareId may be used\
            \ in place of a document UUID"
          format: uuid
    inline_response_200_13:
      type: object
      properties:
        data:
          type: string
          description: The document content in Markdown formatting
      example:
        data: data
    documents_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
      - type: object
        properties:
          collectionId:
            type: string
            description: Optionally filter to a specific collection
            format: uuid
          userId:
            type: string
            format: uuid
          backlinkDocumentId:
            type: string
            format: uuid
          parentDocumentId:
            type: string
            format: uuid
          template:
            type: boolean
            description: Optionally filter to only templates
    inline_response_200_14:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    documents_drafts_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
      - type: object
        properties:
          collectionId:
            type: string
            description: A collection to search within
            format: uuid
          dateFilter:
            type: string
            description: Any documents that have not been updated within the specified
              period will be filtered out
            example: month
            enum:
            - day
            - week
            - month
            - year
    documents_viewed_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
    documents_search_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          query:
            type: string
            example: hiring
          userId:
            type: string
            description: Any documents that have not been edited by the user identifier
              will be filtered out
            format: uuid
          collectionId:
            type: string
            description: A collection to search within
            format: uuid
          includeArchived:
            type: boolean
          includeDrafts:
            type: boolean
          dateFilter:
            type: string
            description: Any documents that have not been updated within the specified
              period will be filtered out
            example: month
            enum:
            - day
            - week
            - month
            - year
    inline_response_200_15:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_15_data'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - document:
            template: true
            fullWidth: true
            pinned: true
            updatedBy: null
            emoji: 🎉
            publishedAt: 2000-01-23T04:56:07.000+00:00
            title: 🎉 Welcome to Acme Inc
            urlId: hDYep1TPAM
            templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            revision: 0.8008281904610115
            createdAt: 2000-01-23T04:56:07.000+00:00
            archivedAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            createdBy: null
            collaborators:
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            text: …
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          context: At Acme Inc our hiring practices are inclusive
          ranking: 1.1844109
        - document:
            template: true
            fullWidth: true
            pinned: true
            updatedBy: null
            emoji: 🎉
            publishedAt: 2000-01-23T04:56:07.000+00:00
            title: 🎉 Welcome to Acme Inc
            urlId: hDYep1TPAM
            templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            revision: 0.8008281904610115
            createdAt: 2000-01-23T04:56:07.000+00:00
            archivedAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            createdBy: null
            collaborators:
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            text: …
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          context: At Acme Inc our hiring practices are inclusive
          ranking: 1.1844109
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    documents_create_body:
      required:
      - collectionId
      - title
      type: object
      properties:
        title:
          type: string
          example: Welcome to Acme Inc
        text:
          type: string
          description: "The body of the document, may contain markdown formatting."
          example: …
        collectionId:
          type: string
          format: uuid
        parentDocumentId:
          type: string
          format: uuid
        templateId:
          type: string
          format: uuid
        template:
          type: boolean
          description: Whether this document should be considered to be a template.
        publish:
          type: boolean
          description: Whether this document should be immediately published and made
            visible to other team members.
    inline_response_200_16:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Document'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
      example:
        data:
          template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    documents_update_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
        title:
          type: string
          description: The title of the document.
        text:
          type: string
          description: "The body of the document, may contain markdown formatting."
          example: …
        append:
          type: boolean
          description: "If true the text field will be appended to the end of the\
            \ existing document, rather than the default behavior of replacing it.\
            \ This is potentially useful for things like logging into a document."
        publish:
          type: boolean
          description: "Whether this document should be published and made visible\
            \ to other team members, if a draft"
        done:
          type: boolean
          description: "Whether the editing session has finished, this will trigger\
            \ any notifications. This property will soon be deprecated."
    documents_templatize_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    documents_star_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
    inline_response_200_17:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
    documents_unstar_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
    documents_unpublish_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
    documents_move_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
        collectionId:
          type: string
          format: uuid
        parentDocumentId:
          type: string
          format: uuid
    inline_response_200_18:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_18_data'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
      example:
        data:
          documents:
          - template: true
            fullWidth: true
            pinned: true
            updatedBy: null
            emoji: 🎉
            publishedAt: 2000-01-23T04:56:07.000+00:00
            title: 🎉 Welcome to Acme Inc
            urlId: hDYep1TPAM
            templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            revision: 0.8008281904610115
            createdAt: 2000-01-23T04:56:07.000+00:00
            archivedAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            createdBy: null
            collaborators:
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            text: …
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - template: true
            fullWidth: true
            pinned: true
            updatedBy: null
            emoji: 🎉
            publishedAt: 2000-01-23T04:56:07.000+00:00
            title: 🎉 Welcome to Acme Inc
            urlId: hDYep1TPAM
            templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            revision: 0.8008281904610115
            createdAt: 2000-01-23T04:56:07.000+00:00
            archivedAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            createdBy: null
            collaborators:
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            - lastActiveAt: 2000-01-23
              createdAt: 2000-01-23T04:56:07.000+00:00
              isSuspended: true
              avatarUrl: http://example.com/aeiou
              name: Jane Doe
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isAdmin: true
              email: ""
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            text: …
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          collections:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            color: '#123123'
            documents: []
            name: Human Resources
            icon: icon
            description: ""
            index: P
            permission: read
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sort:
              field: field
              direction: asc
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            color: '#123123'
            documents: []
            name: Human Resources
            icon: icon
            description: ""
            index: P
            permission: read
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sort:
              field: field
              direction: asc
            updatedAt: 2000-01-23T04:56:07.000+00:00
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    documents_archive_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
    documents_restore_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
        revisionId:
          type: string
          description: Identifier for the revision to restore to.
          format: uuid
    documents_delete_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document. Either the UUID or the
            urlId is acceptable.
          example: hDYep1TPAM
        permanent:
          type: boolean
          description: If set to true the document will be destroyed with no way to
            recover rather than moved to the trash.
          example: false
    events_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
      - type: object
        properties:
          name:
            type: string
            description: "Filter to a specific event, e.g. \"collections.create\"\
              . Event names are in the format \"objects.verb\""
          actorId:
            type: string
            description: Filter to events performed by the selected user
            format: uuid
          documentId:
            type: string
            description: Filter to events performed in the selected document
            format: uuid
          collectionId:
            type: string
            description: Filter to events performed in the selected collection
            format: uuid
          auditLog:
            type: boolean
            description: Whether to return detailed events suitable for an audit log.
              Without this flag less detailed event types will be returned.
    inline_response_200_19:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - actor:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          actorIpAddress: 60.169.88.100
          createdAt: 2000-01-23T04:56:07.000+00:00
          actorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          data:
            name: Equipment list
          modelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: documents.create
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - actor:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          actorIpAddress: 60.169.88.100
          createdAt: 2000-01-23T04:56:07.000+00:00
          actorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          data:
            name: Equipment list
          modelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: documents.create
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    fileOperations_info_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the file operation.
          format: uuid
    inline_response_200_20:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileOperation'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          size: 2048
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: complete
          collection: ""
          type: export
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    fileOperations_redirect_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the file operation.
          format: uuid
    fileOperations_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: The type of fileOperation
            example: export
            enum:
            - export
            - import
    inline_response_200_21:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FileOperation'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 2048
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: complete
          collection: ""
          type: export
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 2048
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: complete
          collection: ""
          type: export
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    groups_info_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the group.
          format: uuid
    inline_response_200_22:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Group'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
    groups_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
    inline_response_200_23:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
    groups_create_body:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: Designers
    inline_response_200_24:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Group'
        policies:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        policies:
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - abilities:
            unstar: true
            move: true
            read: true
            restore: true
            star: true
            update: true
            archive: true
            delete: true
            download: true
            pin: true
            unpin: true
            create: true
            unarchive: true
            createChildDocument: true
            share: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    groups_update_body:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Designers
    groups_delete_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    groups_memberships_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - required:
        - id
        type: object
        properties:
          query:
            type: string
            description: Filter memberships by user names
            example: jenny
    inline_response_200_25:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_25_data'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
          groupMemberships:
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            user: null
          - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            user: null
          users:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    groups_add_user_body:
      required:
      - id
      - userId
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
    inline_response_200_26:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_26_data'
      example:
        data:
          groups:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          groupMemberships:
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - permission: read_write
            id: id
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          users:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    groups_remove_user_body:
      required:
      - id
      - userId
      type: object
      properties:
        id:
          type: string
          description: Identifier for the collection
          format: uuid
        userId:
          type: string
          format: uuid
    inline_response_200_27:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_27_data'
      example:
        data:
          groups:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            memberCount: 11
            name: Engineering
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            updatedAt: 2000-01-23T04:56:07.000+00:00
    revisions_info_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the revision.
          format: uuid
    inline_response_200_28:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Revision'
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: text
          title: title
    revisions_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
    inline_response_200_29:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Revision'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: text
          title: title
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: text
          title: title
    shares_info_body:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the share.
          format: uuid
        documentId:
          type: string
          description: Unique identifier for a document. One of id or documentId must
            be provided.
          format: uuid
    inline_response_200_30:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Share'
      example:
        data:
          lastAccessedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          includeChildDocuments: true
          documentUrl: http://example.com/aeiou
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: false
          documentTitle: React best practices
          url: http://example.com/aeiou
          updatedAt: 2000-01-23T04:56:07.000+00:00
    shares_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
    inline_response_200_31:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Share'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - lastAccessedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          includeChildDocuments: true
          documentUrl: http://example.com/aeiou
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: false
          documentTitle: React best practices
          url: http://example.com/aeiou
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - lastAccessedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          includeChildDocuments: true
          documentUrl: http://example.com/aeiou
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          published: false
          documentTitle: React best practices
          url: http://example.com/aeiou
          updatedAt: 2000-01-23T04:56:07.000+00:00
    shares_create_body:
      required:
      - documentId
      type: object
      properties:
        documentId:
          type: string
          format: uuid
    shares_update_body:
      required:
      - id
      - published
      type: object
      properties:
        id:
          type: string
          format: uuid
        published:
          type: boolean
    shares_revoke_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    users_invite_body:
      required:
      - invites
      type: object
      properties:
        invites:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
    inline_response_200_32:
      type: object
      properties:
        sent:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
      example:
        sent:
        - role: member
          name: name
          email: email
        - role: member
          name: name
          email: email
        users:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    users_info_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
    inline_response_200_33:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
      example:
        data:
          lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    users_list_body:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/Sorting'
      - type: object
        properties:
          query:
            type: string
            example: jane
          filter:
            type: string
            example: all
            enum:
            - invited
            - viewers
            - admins
            - active
            - all
            - suspended
    inline_response_200_34:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        pagination:
          offset: 0.8008281904610115
          limit: 25
        data:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    users_update_body:
      type: object
      properties:
        name:
          type: string
        avatarUrl:
          type: string
          format: uri
    users_promote_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
    users_demote_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
        to:
          type: string
          description: Which role to demote to
          enum:
          - viewer
          - member
    users_suspend_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
    users_activate_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
    users_delete_body:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
          format: uuid
    views_list_body:
      required:
      - documentId
      type: object
      properties:
        documentId:
          type: string
          format: uuid
    inline_response_200_35:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/View'
      example:
        data:
        - firstViewedAt: 2000-01-23T04:56:07.000+00:00
          count: 22
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: id
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          lastViewedAt: 2000-01-23T04:56:07.000+00:00
        - firstViewedAt: 2000-01-23T04:56:07.000+00:00
          count: 22
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: id
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          lastViewedAt: 2000-01-23T04:56:07.000+00:00
    views_create_body:
      required:
      - documentId
      type: object
      properties:
        documentId:
          type: string
          format: uuid
    inline_response_200_36:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/View'
      example:
        data:
          firstViewedAt: 2000-01-23T04:56:07.000+00:00
          count: 22
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: id
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          lastViewedAt: 2000-01-23T04:56:07.000+00:00
    Collection_sort:
      type: object
      properties:
        field:
          type: string
        direction:
          type: string
          enum:
          - asc
          - desc
      description: The sort of documents in the collection. Note that not all API
        responses respect this and it is left as a frontend concern to implement.
      example:
        field: field
        direction: asc
    Policy_abilities:
      type: object
      properties:
        create:
          type: boolean
        read:
          type: boolean
        update:
          type: boolean
        delete:
          type: boolean
        restore:
          type: boolean
        star:
          type: boolean
        unstar:
          type: boolean
        share:
          type: boolean
        download:
          type: boolean
        pin:
          type: boolean
        unpin:
          type: boolean
        move:
          type: boolean
        archive:
          type: boolean
        unarchive:
          type: boolean
        createChildDocument:
          type: boolean
      example:
        unstar: true
        move: true
        read: true
        restore: true
        star: true
        update: true
        archive: true
        delete: true
        download: true
        pin: true
        unpin: true
        create: true
        unarchive: true
        createChildDocument: true
        share: true
    inline_response_200_data:
      type: object
      properties:
        maxUploadSize:
          type: number
        uploadUrl:
          type: string
          format: uri
        form:
          type: object
        attachment:
          $ref: '#/components/schemas/Attachment'
      example:
        uploadUrl: http://example.com/aeiou
        form: {}
        attachment:
          size: 6.027456183070403
          name: name
          documentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          contentType: image/png
          url: http://example.com/aeiou
        maxUploadSize: 0.8008281904610115
    inline_response_200_3_data_services:
      type: object
      properties:
        id:
          type: string
          example: slack
        name:
          type: string
          example: Slack
        authUrl:
          type: string
          example: https://acme-inc.getoutline.com/auth/slack
      example:
        authUrl: https://acme-inc.getoutline.com/auth/slack
        name: Slack
        id: slack
    inline_response_200_3_data:
      type: object
      properties:
        name:
          type: string
          example: Acme Inc
        hostname:
          type: string
          example: acme-inc.getoutline.com
        services:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_3_data_services'
      example:
        hostname: acme-inc.getoutline.com
        name: Acme Inc
        services:
        - authUrl: https://acme-inc.getoutline.com/auth/slack
          name: Slack
          id: slack
        - authUrl: https://acme-inc.getoutline.com/auth/slack
          name: Slack
          id: slack
    inline_response_200_7_data:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      example:
        users:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        memberships:
        - permission: read_write
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - permission: read_write
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    inline_response_200_9_data:
      type: object
      properties:
        collectionGroupMemberships:
          type: array
          items:
            $ref: '#/components/schemas/CollectionGroupMembership'
      example:
        collectionGroupMemberships:
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission: read_write
          id: id
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission: read_write
          id: id
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    inline_response_200_10_data:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        collectionGroupMemberships:
          type: array
          items:
            $ref: '#/components/schemas/CollectionGroupMembership'
      example:
        collectionGroupMemberships:
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission: read_write
          id: id
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission: read_write
          id: id
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
    inline_response_200_11_data:
      type: object
      properties:
        fileOperation:
          $ref: '#/components/schemas/FileOperation'
      example:
        fileOperation:
          createdAt: 2000-01-23T04:56:07.000+00:00
          size: 2048
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: complete
          collection: ""
          type: export
          user:
            lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
    inline_response_200_15_data:
      type: object
      properties:
        context:
          type: string
          description: A short snippet of context from the document that includes
            the search query.
          example: At Acme Inc our hiring practices are inclusive
        ranking:
          type: number
          description: The ranking used to order search results based on relevance.
          format: float
          example: 1.1844109
        document:
          $ref: '#/components/schemas/Document'
      example:
        document:
          template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        context: At Acme Inc our hiring practices are inclusive
        ranking: 1.1844109
    inline_response_200_18_data:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
      example:
        documents:
        - template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - template: true
          fullWidth: true
          pinned: true
          updatedBy: null
          emoji: 🎉
          publishedAt: 2000-01-23T04:56:07.000+00:00
          title: 🎉 Welcome to Acme Inc
          urlId: hDYep1TPAM
          templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revision: 0.8008281904610115
          createdAt: 2000-01-23T04:56:07.000+00:00
          archivedAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          createdBy: null
          collaborators:
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          - lastActiveAt: 2000-01-23
            createdAt: 2000-01-23T04:56:07.000+00:00
            isSuspended: true
            avatarUrl: http://example.com/aeiou
            name: Jane Doe
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isAdmin: true
            email: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          text: …
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          parentDocumentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        collections:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          color: '#123123'
          documents: []
          name: Human Resources
          icon: icon
          description: ""
          index: P
          permission: read
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sort:
            field: field
            direction: asc
          updatedAt: 2000-01-23T04:56:07.000+00:00
    inline_response_200_25_data:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        groupMemberships:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembership'
      example:
        groupMemberships:
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
        - groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
        users:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    inline_response_200_26_data:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        groupMemberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      example:
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        groupMemberships:
        - permission: read_write
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - permission: read_write
          id: id
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        users:
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
        - lastActiveAt: 2000-01-23
          createdAt: 2000-01-23T04:56:07.000+00:00
          isSuspended: true
          avatarUrl: http://example.com/aeiou
          name: Jane Doe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isAdmin: true
          email: ""
    inline_response_200_27_data:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
      example:
        groups:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          memberCount: 11
          name: Engineering
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Validation:
      description: The request failed one or more validations.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: The current API key is not authorized to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthenticated:
      description: The API key is missing or otherwise invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    http:
      type: http
      scheme: bearer
      bearerFormat: JWT
